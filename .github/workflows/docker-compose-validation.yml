name: Validate Docker Compose Services

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  docker-compose-validation:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Tools
      run: |
        set +x
        sudo apt-get update > /dev/null 2>&1
        sudo apt-get install -y netcat-openbsd curl > /dev/null 2>&1
        curl -L https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -o /usr/local/bin/yq > /dev/null 2>&1
        chmod +x /usr/local/bin/yq
        echo "✅ Ferramentas instaladas com sucesso!"

    - name: Docker Compose Up
      run: |
        set +x
        echo "🚀 Subindo containers do docker-compose..."
        docker compose up -d > /dev/null 2>&1
        echo "✅ Containers rodando."

    - name: Wait for containers to be ready
      run: |
        set +x
        echo "⏳ Esperando containers ficarem prontos..."
        sleep 15
        echo "✅ Containers prontos."

    - name: Create validation script
      run: |
        set +x
        echo "🛠️ Criando script de validação..."
        cat << 'EOF' > validate_services.sh
        #!/bin/bash
        set -e
        set +x

        echo "📝 Criando relatório de validação..."
        docker run -d --name test_container --network internal_network busybox tail -f /dev/null > /dev/null 2>&1
        docker network connect external_network test_container > /dev/null 2>&1

        echo "| Serviço           | Porta | Status    | Dica                          |" > validation_report.md
        echo "|:------------------|:------|:----------|:------------------------------|" >> validation_report.md

        SERVICES=$(yq e '.services | keys | .[]' docker-compose.yml)

        for service in $SERVICES; do
          echo "🔎 Verificando serviço: $service"

          EXPOSE_PORT=$(yq e ".services.\"$service\".expose[0]" docker-compose.yml)

          if [ "$EXPOSE_PORT" == "null" ] || [ -z "$EXPOSE_PORT" ]; then
            EXPOSE_PORT=$(yq e ".services.\"$service\".ports[0]" docker-compose.yml | cut -d':' -f2)
          fi

          if [ "$EXPOSE_PORT" == "null" ] || [ -z "$EXPOSE_PORT" ]; then
            echo "❌ Serviço $service não declarou 'expose' nem 'ports'."
            echo "💡 Dica: adicione expose: [\"PORTA\"] no docker-compose.yml"
            echo "| $(printf '%-18s' $service) |   -   | ❌ Falhou | Adicione expose/ports    |" >> validation_report.md
            exit 1
          fi

          echo "🔌 Testando conexão para $service:$EXPOSE_PORT"
          docker exec test_container sh -c "nc -z -w 5 $service $EXPOSE_PORT" > /dev/null 2>&1
          if [ $? -ne 0 ]; then
            echo "❌ Falha na conexão TCP para $service:$EXPOSE_PORT"
            echo "💡 Dica: verifique se o serviço $service está escutando corretamente."
            echo "| $(printf '%-18s' $service) | $EXPOSE_PORT | ❌ Falhou | Corrija o serviço       |" >> validation_report.md
            exit 1
          else
            echo "✅ Conexão OK para $service:$EXPOSE_PORT"
            echo "| $(printf '%-18s' $service) | $EXPOSE_PORT | ✅ OK     |                              |" >> validation_report.md
          fi
        done
        EOF

        chmod +x validate_services.sh
        echo "✅ Script de validação criado."

    - name: Run validation script
      run: |
        set +x
        echo "🏃‍♂️ Executando validação dos serviços..."
        ./validate_services.sh
        echo "✅ Validação concluída."

    - name: Upload Relatório de Validação
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: docker-compose-validation-report
        path: validation_report.md

    - name: Cleanup
      if: always()
      run: |
        set +x
        echo "🧹 Limpando containers..."
        docker rm -f test_container > /dev/null 2>&1 || true
        docker compose down > /dev/null 2>&1
        echo "✅ Cleanup finalizado."
