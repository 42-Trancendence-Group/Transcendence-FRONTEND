name: Validate Docker Compose Services

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  docker-compose-validation:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y netcat-openbsd curl
        curl -L https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -o /usr/local/bin/yq
        chmod +x /usr/local/bin/yq

    - name: Docker Compose Up
      run: |
        docker compose up -d

    - name: Wait for containers to be ready
      run: |
        echo "Esperando containers ficarem prontos..."
        sleep 15

    - name: Create validation script
      run: |
        cat << 'EOF' > validate_services.sh
        #!/bin/bash
        set -e

        echo "üìù Criando relat√≥rio de valida√ß√£o..."
        docker run -d --name test_container --network internal_network busybox tail -f /dev/null
        docker network connect external_network test_container

        echo "| Servi√ßo           | Porta | Status    | Dica                          |" > validation_report.md
        echo "|:------------------|:------|:----------|:------------------------------|" >> validation_report.md

        SERVICES=$(yq e '.services | keys | .[]' docker-compose.yml)

        for service in $SERVICES; do
          echo "üîé Verificando servi√ßo: $service"

          EXPOSE_PORT=$(yq e ".services.\"$service\".expose[0]" docker-compose.yml)

          if [ "$EXPOSE_PORT" == "null" ] || [ -z "$EXPOSE_PORT" ]; then
            EXPOSE_PORT=$(yq e ".services.\"$service\".ports[0]" docker-compose.yml | cut -d':' -f2)
          fi

          if [ "$EXPOSE_PORT" == "null" ] || [ -z "$EXPOSE_PORT" ]; then
            echo "‚ùå Servi√ßo $service n√£o declarou 'expose' nem 'ports'."
            echo "üí° Dica: adicione expose: [\"PORTA\"] no docker-compose.yml"
            echo "| $(printf '%-18s' $service) |   -   | ‚ùå Falhou | Adicione expose/ports    |" >> validation_report.md
            exit 1
          fi

          echo "üîå Testando conex√£o para $service:$EXPOSE_PORT"
          docker exec test_container sh -c "nc -z -w 5 $service $EXPOSE_PORT"
          if [ $? -ne 0 ]; then
            echo "‚ùå Falha na conex√£o TCP para $service:$EXPOSE_PORT"
            echo "üí° Dica: verifique se o servi√ßo $service est√° escutando corretamente."
            echo "| $(printf '%-18s' $service) | $EXPOSE_PORT | ‚ùå Falhou | Corrija o servi√ßo       |" >> validation_report.md
            exit 1
          else
            echo "‚úÖ Conex√£o OK para $service:$EXPOSE_PORT"
            echo "| $(printf '%-18s' $service) | $EXPOSE_PORT | ‚úÖ OK     |                              |" >> validation_report.md
          fi
        done
        EOF

        chmod +x validate_services.sh

    - name: Run validation script
      run: |
        ./validate_services.sh

    - name: Upload Relat√≥rio de Valida√ß√£o
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: docker-compose-validation-report
        path: validation_report.md

    - name: Cleanup
      if: always()
      run: |
        docker rm -f test_container || true
        docker compose down
